apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: authentik
  namespace: argocd
  labels:
    name: authentik
spec:
  project: infra

  source:
    repoURL: https://charts.goauthentik.io
    chart: authentik
    targetRevision: 2022.10.0

    helm:
      values: |
        image:
          tag: 2022.10.1
        authentik:
          postgresql:
            name: ~
            password: ~
            host: ~
          error_reporting:
            enabled: true

        ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.fenrir.moe, https://*.tenma.com"
            nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: 100m
          hosts:
          - host: auth.tenma.moe
            paths:
            - path: "/"
              pathType: Prefix
        
        envFrom:
        - secretRef:
            name: authentik

        postgresql:
          enabled: false
        redis:
          enabled: true

  destination:
    server: https://kubernetes.default.svc
    namespace: authentik

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - Validate=false
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 5